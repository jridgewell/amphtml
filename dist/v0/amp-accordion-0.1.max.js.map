{"version":3,"sources":["node_modules/browser-pack/_prelude.js","build/amp-accordion-0.1.css.js","extensions/amp-accordion/0.1/amp-accordion.js","src/layout.js","src/log.js","src/mode.js"],"names":[],"mappings":"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","file":"amp-accordion-0.1.max.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export const CSS = \"amp-accordion{display:block!important}amp-accordion>section{float:none!important}amp-accordion>section>:nth-child(n){display:none!important;float:none!important}amp-accordion>section>.-amp-accordion-content,amp-accordion>section>.-amp-accordion-header{display:block!important;overflow:hidden!important;position:relative!important}.-amp-accordion-content,.-amp-accordion-header,amp-accordion,amp-accordion>section{margin:0}.-amp-accordion-header{cursor:pointer;background-color:#efefef;padding-right:20px;border:1px solid #dfdfdf}amp-accordion>section>.-amp-accordion-content{display:none!important}amp-accordion>section[expanded]>.-amp-accordion-content{display:block!important}\\n/*# sourceURL=/extensions/amp-accordion/0.1/amp-accordion.css*/\";\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CSS} from '../../../build/amp-accordion-0.1.css';\nimport {Layout} from '../../../src/layout';\nimport {user} from '../../../src/log';\n\nclass AmpAccordion extends AMP.BaseElement {\n\n  /** @override */\n  isLayoutSupported(layout) {\n    return layout == Layout.CONTAINER;\n  }\n\n  /** @override */\n  buildCallback() {\n    /** @const @private {!NodeList} */\n    this.sections_ = this.getRealChildren();\n\n    this.element.setAttribute('role', 'tablist');\n    const boundOnHeaderClick_ = this.onHeaderClick_.bind(this);\n    this.sections_.forEach((section, index) => {\n      user.assert(\n          section.tagName.toLowerCase() == 'section',\n          'Sections should be enclosed in a <section> tag, ' +\n          'See https://github.com/ampproject/amphtml/blob/master/extensions/' +\n          'amp-accordion/amp-accordion.md. Found in: %s', this.element);\n      const sectionComponents_ = section.children;\n      user.assert(\n          sectionComponents_.length == 2,\n          'Each section must have exactly two children. ' +\n          'See https://github.com/ampproject/amphtml/blob/master/extensions/' +\n          'amp-accordion/amp-accordion.md. Found in: %s', this.element);\n      const header = sectionComponents_[0];\n      const content = sectionComponents_[1];\n      header.classList.add('-amp-accordion-header');\n      header.setAttribute('role', 'tab');\n      content.classList.add('-amp-accordion-content');\n      content.setAttribute('role', 'tabpanel');\n      content.setAttribute(\n          'aria-expanded', section.hasAttribute('expanded').toString());\n      let contentId = content.getAttribute('id');\n      if (!contentId) {\n        contentId = this.element.id + '_AMP_content_' + index;\n        content.setAttribute('id', contentId);\n      }\n      header.setAttribute('aria-controls', contentId);\n      header.addEventListener('click', boundOnHeaderClick_);\n    });\n  }\n\n  /**\n   * Handles accordion headers clicks to expand/collapse its content.\n   * @param {!MouseEvent} event Click event.\n   * @private\n   */\n  onHeaderClick_(event) {\n    event.preventDefault();\n    const section = event.currentTarget.parentNode;\n    const sectionComponents_ = section.children;\n    const content = sectionComponents_[1];\n    this.mutateElement(() => {\n      if (section.hasAttribute('expanded')) {\n        section.removeAttribute('expanded');\n        content.setAttribute('aria-expanded', 'false');\n      } else {\n        section.setAttribute('expanded', '');\n        content.setAttribute('aria-expanded', 'true');\n      }\n    }, content);\n  }\n}\n\nAMP.registerElement('amp-accordion', AmpAccordion, CSS);\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implements element layout. See https://goo.gl/9avXuT for\n * details.\n */\n\nimport {dev, user} from './log';\n\n\n/**\n * @enum {string}\n */\nexport const Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n};\n\n\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\nlet LengthDef;\n\n\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\nlet DimensionsDef;\n\n\n/**\n * The set of elements with natural dimensions, that is, elements\n * which have a known dimension either based on their value specified here,\n * or, if the value is null, a dimension specific to the browser.\n * `hasNaturalDimensions` checks for membership in this set.\n * `getNaturalDimensions` determines the dimensions for an element in the\n *    set and caches it.\n * @type {!Object<string, ?DimensionsDef>}\n * @private  Visible for testing only!\n */\nexport const naturalDimensions_ = {\n  'AMP-PIXEL': {width: '1px', height: '1px'},\n  'AMP-ANALYTICS': {width: '1px', height: '1px'},\n  // TODO(dvoytenko): audio should have width:auto.\n  'AMP-AUDIO': null,\n  'AMP-SOCIAL-SHARE': {width: '60px', height: '44px'},\n};\n\n\n/**\n * Elements that the progess can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\nexport const LOADING_ELEMENTS_ = {\n  'AMP-ANIM': true,\n  'AMP-BRIGHTCOVE': true,\n  'AMP-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-VIDEO': true,\n  'AMP-YOUTUBE': true,\n};\n\n\n/**\n * @param {string} s\n * @return {Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\nexport function parseLayout(s) {\n  for (const k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {!Layout} layout\n * @return {string}\n */\nexport function getLayoutClass(layout) {\n  return '-amp-layout-' + layout;\n}\n\n\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeDefined(layout) {\n  return (layout == Layout.FIXED ||\n      layout == Layout.FIXED_HEIGHT ||\n      layout == Layout.RESPONSIVE ||\n      layout == Layout.FILL ||\n      layout == Layout.FLEX_ITEM);\n}\n\n\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} tag\n * @return {boolean}\n */\nexport function isInternalElement(tag) {\n  const tagName = (typeof tag == 'string') ? tag : tag.tagName;\n  return tagName && tagName.toLowerCase().indexOf('i-') == 0;\n}\n\n\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined} s\n * @return {!LengthDef|undefined}\n */\nexport function parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n  if (!s) {\n    return undefined;\n  }\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n  return s;\n}\n\n\n\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n */\nexport function assertLength(length) {\n  user.assert(\n      /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length),\n      'Invalid length value: %s', length);\n  return length;\n}\n\n\n\n\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n */\nexport function assertLengthOrPercent(length) {\n  user.assert(/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length),\n      'Invalid length or percent value: %s', length);\n  return length;\n}\n\n\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef} length\n * @return {string}\n */\nexport function getLengthUnits(length) {\n  assertLength(length);\n  const m = user.assert(length.match(/[a-z]+/i),\n      'Failed to read units from %s', length);\n  return m[0];\n}\n\n\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string} length\n * @return {number}\n */\nexport function getLengthNumeral(length) {\n  return parseFloat(length);\n}\n\n\n/**\n * Determines whether the tagName is a known element that has natural dimensions\n * in our runtime or the browser.\n * @param {string} tagName The element tag name.\n * @return {DimensionsDef}\n */\nexport function hasNaturalDimensions(tagName) {\n  tagName = tagName.toUpperCase();\n  return naturalDimensions_[tagName] !== undefined;\n}\n\n\n/**\n * Determines the default dimensions for an element which could vary across\n * different browser implementations, like <audio> for instance.\n * This operation can only be completed for an element whitelisted by\n * `hasNaturalDimensions`.\n * @param {!Element} element\n * @return {DimensionsDef}\n */\nexport function getNaturalDimensions(element) {\n  const tagName = element.tagName.toUpperCase();\n  dev.assert(naturalDimensions_[tagName] !== undefined);\n  if (!naturalDimensions_[tagName]) {\n    const doc = element.ownerDocument;\n    const naturalTagName = tagName.replace(/^AMP\\-/, '');\n    const temp = doc.createElement(naturalTagName);\n    // For audio, should no-op elsewhere.\n    temp.controls = true;\n    temp.style.position = 'absolute';\n    temp.style.visibility = 'hidden';\n    doc.body.appendChild(temp);\n    naturalDimensions_[tagName] = {\n      width: (temp./*OK*/offsetWidth || 1) + 'px',\n      height: (temp./*OK*/offsetHeight || 1) + 'px',\n    };\n    doc.body.removeChild(temp);\n  }\n  return naturalDimensions_[tagName];\n}\n\n\n/**\n * Whether the loading can be shown for the specified elemeent. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {string} tagName The element tag name.\n * @return {boolean}\n */\nexport function isLoadingAllowed(tagName) {\n  return LOADING_ELEMENTS_[tagName.toUpperCase()] || false;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\n\n\n/** @const Time when this JS loaded.  */\nconst start = new Date().getTime();\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n\n/**\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n\n/**\n * Logging class.\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * @param {!Window} win\n   * @param {function(!Mode):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix) {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = win.AMP_TEST ? win.parent : win;\n\n    /** @private @const {function(!Mode):boolean} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.calcLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix || '';\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  calcLevel_() {\n    const mode = getMode();\n\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (mode.log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (mode.localDev && !mode.log) {\n      return LogLevel.INFO;\n    }\n\n    // Delegate to the specific resolver.\n    return this.levelFunc_(mode);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   * @param {?} opt_error\n   */\n  msg_(tag, level, messages) {\n    if (this.level_ != LogLevel.OFF) {\n      let fn = this.win.console.log;\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n      messages.unshift(new Date().getTime() - start, '[' + tag + ']');\n      fn.apply(this.win.console, messages);\n    }\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.level_ != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  fine(tag, var_args) {\n    if (this.level_ >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  info(tag, var_args) {\n    if (this.level_ >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  warn(tag, var_args) {\n    if (this.level_ >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @param {?} opt_error\n   */\n  error(tag, var_args) {\n    if (this.level_ >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      const error = createErrorVargs.apply(null,\n          Array.prototype.slice.call(arguments, 1));\n      this.prepareError_(error);\n      this.win.setTimeout(() => {throw error;});\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {string} message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {T} The value of shouldBeTrueish.\n   * @template T\n   */\n  /*eslint \"google-camelcase/google-camelcase\": 0*/\n  assert(shouldBeTrueish, message, var_args) {\n    let firstElement;\n    if (!shouldBeTrueish) {\n      message = message || 'Assertion failed';\n      const splitMessage = message.split('%s');\n      const first = splitMessage.shift();\n      let formatted = first;\n      const messageArray = [];\n      pushIfNonEmpty(messageArray, first);\n      for (let i = 2; i < arguments.length; i++) {\n        const val = arguments[i];\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n        const nextConstant = splitMessage.shift();\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += toString(val) + nextConstant;\n      }\n      const e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e);\n      throw e;\n    }\n    return shouldBeTrueish;\n  }\n  /*eslint \"google-camelcase/google-camelcase\": 2*/\n\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a value,\n   * the error is thrown.\n   *\n   * @param {!Enum<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return T\n   * @template T\n   */\n  assertEnumValue(enumObj, s, opt_enumName) {\n    for (const k in enumObj) {\n      if (enumObj[k] == s) {\n        return enumObj[k];\n      }\n    }\n    this.assert(false,\n        'Unknown %s value: \"%s\"',\n        opt_enumName || 'enum', s);\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    }\n  }\n}\n\n\n/**\n * @param {*} val\n * @return {string}\n */\nfunction toString(val) {\n  if (val instanceof Element) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n  return val;\n}\n\n\n/**\n * @param {!Array} array\n * @param {*} val\n */\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n\n\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @private\n */\nfunction createErrorVargs(var_args) {\n  let error = null;\n  let message = '';\n  for (let i = 0; i < arguments.length; i++) {\n    const arg = arguments[i];\n    if (arg instanceof Error && !error) {\n      error = arg;\n    } else {\n      if (message) {\n        message += ' ';\n      }\n      message += arg;\n    }\n  }\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n  return error;\n}\n\n\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\nexport function rethrowAsync(var_args) {\n  const error = createErrorVargs.apply(null, arguments);\n  setTimeout(() => {throw error;});\n}\n\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *\n * @const {!Log}\n */\nexport const user = new Log(window, mode => {\n  const logNum = parseInt(mode.log, 10);\n  if (mode.development || logNum >= 1) {\n    return LogLevel.FINE;\n  }\n  return LogLevel.OFF;\n}, USER_ERROR_SENTINEL);\n\n\n/**\n * AMP development log. Stripped in the PROD binary.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *\n * @const {!Log}\n */\nexport const dev = new Log(window, mode => {\n  const logNum = parseInt(mode.log, 10);\n  if (logNum >= 3) {\n    return LogLevel.FINE;\n  }\n  if (logNum >= 2) {\n    return LogLevel.INFO;\n  }\n  return LogLevel.OFF;\n});\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   filter: (string|undefined)\n *   minified: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n * }}\n */\nlet ModeDef;\n\n/** @typedef {?ModeDef} */\nlet mode = null;\n\n/** @typedef {string} */\nconst version = '$internalRuntimeVersion$';\n\n/**\n * `fullVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet fullVersion = '';\n\n/**\n * Provides info about the current app.\n * @return {!ModeDef}\n */\nexport function getMode() {\n  if (mode) {\n    return mode;\n  }\n  return mode = getMode_();\n}\n\n/**\n * Set mode in a test. Pass null in afterEach function to reset.\n * @param {?ModeDef} m\n */\nexport function setModeForTesting(m) {\n  mode = m;\n}\n\n/**\n * Provides info about the current app.\n * @return {!ModeDef}\n */\nfunction getMode_() {\n  if (window.context && window.context.mode) {\n    return window.context.mode;\n  }\n  const isLocalDev = (location.hostname == 'localhost' ||\n      (location.ancestorOrigins && location.ancestorOrigins[0] &&\n          location.ancestorOrigins[0].indexOf('http://localhost:') == 0)) &&\n      // Filter out localhost running against a prod script.\n      // Because all allowed scripts are ours, we know that these can only\n      // occur during local dev.\n      !!document.querySelector('script[src*=\"/dist/\"],script[src*=\"/base/\"]');\n\n  const developmentQuery = parseQueryString_(\n      // location.originalHash is set by the viewer when it removes the fragment\n      // from the URL.\n      location.originalHash || location.hash);\n\n  if (!fullVersion) {\n    fullVersion = getFullVersion_(window, isLocalDev);\n  }\n\n  return {\n    localDev: isLocalDev,\n    // Triggers validation\n    development: developmentQuery['development'] == '1' || window.AMP_DEV_MODE,\n    // Allows filtering validation errors by error category. For the\n    // available categories, see ErrorCategory in validator/validator.proto.\n    filter: developmentQuery['filter'],\n    minified: process.env.NODE_ENV == 'production',\n    test: window.AMP_TEST,\n    log: developmentQuery['log'],\n    version: fullVersion,\n  };\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n * @param {string} queryString\n * @return {!Object<string, string>}\n * TODO(dvoytenko): dedupe with `url.js:parseQueryString`. This is currently\n * necessary here because `url.js` itself inderectly depends on `mode.js`.\n */\nfunction parseQueryString_(queryString) {\n  const params = Object.create(null);\n  if (!queryString) {\n    return params;\n  }\n  if (queryString.indexOf('?') == 0 || queryString.indexOf('#') == 0) {\n    queryString = queryString.substr(1);\n  }\n  const pairs = queryString.split('&');\n  for (let i = 0; i < pairs.length; i++) {\n    const pair = pairs[i];\n    const eqIndex = pair.indexOf('=');\n    let name;\n    let value;\n    if (eqIndex != -1) {\n      name = decodeURIComponent(pair.substring(0, eqIndex)).trim();\n      value = decodeURIComponent(pair.substring(eqIndex + 1)).trim();\n    } else {\n      name = decodeURIComponent(pair).trim();\n      value = '';\n    }\n    if (name) {\n      params[name] = value;\n    }\n  }\n  return params;\n}\n\n/**\n * Retrieve the `fullVersion` which will have a numeric prefix\n * denoting canary/prod/experiment.\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @private\n * @visibleForTesting\n */\nexport function getFullVersion_(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return version;\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  return version;\n}\n"]}